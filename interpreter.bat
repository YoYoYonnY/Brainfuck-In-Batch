@ECHO OFF
SETLOCAL ENABLEDELAYEDEXPANSION
SET "STDIN="

FOR /F "TOKENS=*" %%A IN ('FINDSTR /n $') DO (
	SET "LINE=%%A"
	SET "LINE=!LINE:*:=!"
	CALL SET "STDIN=%%STDIN%%!LINE!"
)

CALL :FINDCODELEN STDIN

SET "CODE=!STDIN:~0,%CODELEN%!"
SET /A "CODELEN=CODELEN+1"
SET "INPUT=!STDIN:~%CODELEN%!"

SET ASCII="#$%%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
SET CODEPTR=0

SET STACK=

SET MEMPTR=0
SET MEMSIZE=30000

FOR /F %%A IN ('"PROMPT $H &ECHO ON &FOR %%B IN (1) DO REM"') DO SET BS=%%A
:LOOP
SET INSTR=!CODE:~%CODEPTR%,1!
IF [!INSTR!] == [] GOTO EXIT
IF NOT DEFINED MEM[!MEMPTR!] SET MEM[!MEMPTR!]=0
IF !INSTR!==+ (
	IF !MEM[%MEMPTR%]! GEQ 255 (
		SET MEM[!MEMPTR!]=0
	) ELSE (
		SET /A MEM[!MEMPTR!]=MEM[!MEMPTR!]+1
	)
	GOTO :NEXT
)
IF !INSTR!==- (
	IF !MEM[%MEMPTR%]! LEQ 0 (
		SET MEM[!MEMPTR!]=255
	) ELSE (
		SET /A MEM[!MEMPTR!]=MEM[!MEMPTR!]-1
	)
	GOTO :NEXT
)
IF !INSTR!==^> (
	IF !MEMPTR! GEQ %MEMSIZE% (
		SET MEMPTR=0
	) ELSE (
		SET /A MEMPTR=!MEMPTR!+1
	)
	GOTO :NEXT
)
IF !INSTR!==^< (
	IF !MEMPTR! LEQ 0 (
		SET MEMPTR=%MEMSIZE%
	) ELSE (
		SET /A MEMPTR=!MEMPTR!-1
	)
	GOTO :NEXT
)
IF !INSTR!==^, (
	CALL :GETCHAR MEM[!MEMPTR!]
	GOTO :NEXT
)
IF !INSTR!==. (
	CALL :PUTCHAR !MEM[%MEMPTR%]!
	GOTO :NEXT
)
IF !INSTR!==[ (
	IF !MEM[%MEMPTR%]!==0 (
		:WHILESTARTLOOP
		SET INSTR=!CODE:~%CODEPTR%,1!
		IF !INSTR!==[ SET /A NESTLED=!NESTLED!+1
		IF !INSTR!==] SET /A NESTLED=!NESTLED!-1
		SET /A CODEPTR=!CODEPTR!+1
		IF [!INSTR!] == [] GOTO ERROR
		IF NOT !NESTLED!==0 GOTO WHILESTARTLOOP
		GOTO :LOOP
	)
	SET "STACK=%CODEPTR% %STACK%"
	GOTO :NEXT
)
IF !INSTR!==] (
	FOR /F "TOKENS=1" %%A IN ("!STACK!") DO SET "TOP=%%A"
	FOR /F "TOKENS=1*" %%A IN ("!STACK!") DO SET "STACK=%%B"
	IF NOT !MEM[%MEMPTR%]!==0 (
		SET CODEPTR=!TOP!
		GOTO :LOOP
	)
)
:NEXT
SET /A CODEPTR=!CODEPTR!+1
GOTO :LOOP
:PUTCHAR <CHAR>
SET "CHAR=%1"
IF EXIST ascii\ascii!CHAR!.txt (
	TYPE ascii\ascii!CHAR!.txt
	GOTO :PUTCHAR_RETURN
)
IF !CHAR! EQU 61 GOTO :PUTCHAR_INVALID
IF !CHAR! GEQ 127 GOTO :PUTCHAR_INVALID
IF !CHAR! GEQ 34 (
	CALL :PUTCHAR_SLOWDOWN
	GOTO :PUTCHAR_RETURN
)
IF !CHAR! EQU 33 (
	<NUL SET /P=^^!
	GOTO :PUTCHAR_RETURN
)
IF !CHAR! EQU 32 (
	<NUL SET /P=.%BS% 
	REM WARNING: Above line must contain a space before the newline
	GOTO :PUTCHAR_RETURN
)
IF !CHAR! EQU 10 (
	ECHO.
	GOTO :PUTCHAR_RETURN
)
GOTO :PUTCHAR_INVALID
:PUTCHAR_SLOWDOWN
SET /A CHAR=%CHAR%-34
<NUL SET /P=!ASCII:~%CHAR%,1!
GOTO :EOF
:PUTCHAR_INVALID
<NUL SET /P=?
:PUTCHAR_RETURN
GOTO :EOF

:GETCHAR <RESULT>
SET "RESULT=0"
IF [!INPUT!]==[] GOTO :GETCHAR_RETURN
FOR /L %%I IN (0,1,92) DO (
	IF "!ASCII:~%%I,1!" == "!INPUT:~0,1!" (
		SET "RESULT=%%I"
		SET /A "RESULT=!RESULT!+34"
		GOTO :GETCHAR_END
	)
)
IF "!INPUT:~0,1!"=="^!" (
	SET "RESULT=33"
	GOTO :GETCHAR_END
)
IF "!INPUT:~0,1!"==" " (
	SET "RESULT=32"
	GOTO :GETCHAR_END
)
:GETCHAR_END
SET "INPUT=!INPUT:~1!"
:GETCHAR_RETURN
SET "%1=!RESULT!"
GOTO :EOF

:FINDCODELEN <CODE>
SET CODELEN=0
:FINDCODELEN_LOOP
SET "INSTR=!%1:~%CODELEN%,1!"
IF "%INSTR%"=="^!" GOTO :FINDCODELEN_LOOP_END
IF "%INSTR%"=="" GOTO :FINDCODELEN_LOOP_END
SET /A "CODELEN=CODELEN+1"
GOTO :FINDCODELEN_LOOP
:FINDCODELEN_LOOP_END
GOTO :EOF

:ERROR
ECHO ERROR: UNBALANCED BRACKETS
:EXIT
